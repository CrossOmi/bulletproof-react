データフローとビジネスロジック
[ ] 追跡対象機能の選定: 分析する機能を一つ決める（例: 記事一覧表示、コメント投稿など）。
[ ] UIからデータ取得までの追跡:
その機能のUIを構成するコンポーネント（featuresやcomponents内）を特定する。
特定したコンポーネントが、@tanstack/react-queryを使ってAPIからデータを取得するまでの処理の流れを追う。
APIのモック（mswを使用）がどのように定義されているかを確認する。
[ ] クライアント状態の役割の確認: その機能でzustandが使われている場合、どのようなUIの状態を管理しているかを確認する。
[ ] テストコードの解読: その機能に対応するテストコード（.test.tsx）を読み、どのような観点で品質が保証されているかを理解する。
設計思想の地図の完成と応用
[ ] 設計思想の言語化: このプロジェクトのアーキテクチャの「核心（コアコンセプト）」は何かを、自分の言葉で説明できるようにまとめる。
[ ] 設計の評価: この設計の「優れている点」と、考えられる「トレードオフ（何かを得るために何を犠牲にしているか）」を考察する。
[ ] 思考フレームワークの確立: この一連のタスクを振り返り、他のプロジェクトを分析する際の自分なりの「チェックリスト」を作成する。
